{"version":3,"sources":["src/lazy-load.js","src/markup.js","src/navigation.js","index.js"],"names":["lazyLoadImages","lazyImages","document","querySelectorAll","IntersectionObserver","imageObs","entries","observe","forEach","entry","isIntersecting","image","target","classList","remove","unobserve","slideImage","carouselMarkup","data","numberOfSlides","slides","length","map","slide","i","slideIndex","content","join","showButtons","showDots","dotAria","selected","addMarkupToPage","elementId","querySelector","innerHTML","disableButtons","index","prev","next","setAttribute","removeAttribute","setDots","dots","originalIndex","add","getCurrentIndex","getAttribute","activateSlide","slideToActivate","arrows","undefined","slideLink","activeIndex","indexOf","activeSlideLink","focus","navigateWithDots","e","slideClass","navigateWithButtons","contains","handleButtonNavigation","sliderButtons","console","log","button","addEventListener","handleDotNavigation","dot","setSlideLinkTabindex","firstSlideLink","init"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export function lazyLoadImages() {\n  const lazyImages = document.querySelectorAll('.whirli-slide.whirli-lazy-img')\n  \n  if (typeof IntersectionObserver === 'undefined') {\n    lazyImages.forEach((image) => {\n      image.classList.remove('whirli-lazy-img');\n    })\n\n    return;\n  }\n\n  const imageObs = new IntersectionObserver((entries, observe) => {\n    entries.forEach((entry) => {\n      if(entry.isIntersecting) {\n        const image = entry.target;\n        image.classList.remove('whirli-lazy-img');\n        imageObs.unobserve(image);\n      }\n    })\n  });\n  \n  lazyImages.forEach((slideImage) => {\n    imageObs.observe(slideImage);\n  })\n}\n","export const carouselMarkup = (data) => {\n  const numberOfSlides = data.slides.length;\n\n  return `\n    ${data.slides.map(function(slide, i) {\n      const slideIndex = i + 1;\n      return `\n        <div class=\"whirli-slide whirli-slide--${slideIndex} whirli-lazy-img\" aria-label=\"slide ${slideIndex} of ${numberOfSlides}\" aria-hidden=\"${slideIndex === 1 ? false : true}\">\n          ${slide.content}\n        </div>\n      `;\n      }).join('')}\n      \n      ${data.showButtons ? \n      `<button class=\"whirli-button whirli-button--prev\" aria-label=\"no previous slide available\" aria-disabled=\"true\"></button>\n      <button class=\"whirli-button whirli-button--next\" aria-label=\"next slide\"></button>`\n      : ''}\n\n      ${data.showDots ?\n        `<nav class=\"whirli-dot-nav\">\n          ${data.slides.map(function(slide, i) {\n            const slideIndex = i + 1;\n            const dotAria = slideIndex === 1 ? `slide ${slideIndex} selected` : `go to slide ${slideIndex}`;\n            const selected = slideIndex === 1 ? 'whirli-dot--selected' : '';\n            return `\n              <button class=\"whirli-dot ${selected}\" data-slide=\"whirli-slide--${slideIndex}\" aria-label=\"${dotAria}\"></button>\n            `;\n            }).join('')}\n        </nav>`\n      : ''}\n  `\n}\n\nexport function addMarkupToPage(elementId, data) {\n  document.querySelector(`#${elementId}`).innerHTML = `${carouselMarkup(data)}`;\n}\n","const disableButtons = (index, slides) => {\n  const prev = document.querySelector('.whirli-button--prev');\n  const next = document.querySelector('.whirli-button--next');\n\n  const lastSlideIndex = slides.length - 1;\n  const firstSlideIndex = 0;\n\n  if (index === lastSlideIndex) {\n    next.setAttribute('aria-disabled', true);\n    next.setAttribute('aria-label', 'no next slide available');\n  } else if (index === firstSlideIndex) {\n    prev.setAttribute('aria-disabled', true);\n    prev.setAttribute('aria-label', 'no previous slide available');\n  } else {\n    next.removeAttribute('aria-disabled');\n    prev.removeAttribute('aria-disabled');\n    next.setAttribute('aria-label', 'next slide');\n    prev.setAttribute('aria-label', 'previous slide');\n  }\n}\n\nconst setDots = (index, dots, originalIndex) => {\n  dots[originalIndex].setAttribute('aria-label', `go to slide ${originalIndex}`);\n  dots[originalIndex].classList.remove('whirli-dot--selected');\n  dots[index].setAttribute('aria-label', `slide ${index} selected`);\n  dots[index].classList.add('whirli-dot--selected');\n}\n\nconst getCurrentIndex = (slides) => {\n  let originalIndex;\n  slides.forEach((slide, index) => {\n    const hiddenAttribute = slide.getAttribute('aria-hidden');\n    if (hiddenAttribute === 'false') originalIndex = index\n  });\n  return originalIndex;\n}\n\nconst activateSlide = (slideToActivate, slides, originalIndex) => {\n  const arrows = document.querySelectorAll('.whirli-button');\n  const dots = document.querySelectorAll('.whirli-dot');\n\n  if (slideToActivate !== undefined) {\n    // hide current slide\n    slides[originalIndex].setAttribute('aria-hidden', true);\n    slides[originalIndex].removeAttribute('tabindex');\n\n    // make sure links on slide that will be hidden are not tabbable\n    const slideLink = slides[originalIndex].querySelector('a');\n    if (slideLink) slideLink.setAttribute('tabindex', '-1')\n\n    // disable buttons if needed\n    const activeIndex = slides.indexOf(slideToActivate);\n    if (dots.length > 0) setDots(activeIndex, dots, originalIndex);\n    if (arrows.length > 0) disableButtons(activeIndex, slides);\n\n    // set active slide\n    const activeSlideLink = slideToActivate.querySelector('a');\n    if(activeSlideLink) activeSlideLink.setAttribute('tabindex', '0')\n    slideToActivate.setAttribute('aria-hidden', false);\n    slideToActivate.setAttribute('tabindex', 0);\n    slideToActivate.focus()\n  } \n}\n\nconst navigateWithDots = (e) => {\n  const slides = document.querySelectorAll('.whirli-slide');\n  const originalIndex = getCurrentIndex(slides)\n  const slideClass = e.target.getAttribute('data-slide');\n  const slideToActivate = document.querySelector(`.${slideClass}`);\n\n  activateSlide(slideToActivate, slides, originalIndex);\n}\n\nconst navigateWithButtons = (e) => {\n  const slides = document.querySelectorAll('.whirli-slide');\n  const originalIndex = getCurrentIndex(slides)\n  const slideToActivate = e.target.classList.contains('whirli-button--next')\n    ? slides[originalIndex + 1]\n    : e.target.classList.contains('whirli-button--prev')\n      ? slides[originalIndex - 1]\n      : null;\n\n  activateSlide(slideToActivate, slides, originalIndex);\n}\n\nexport function handleButtonNavigation() {\n  const sliderButtons = document.querySelectorAll('.whirli-button');\n  console.log(typeof sliderButtons, 'typeeee');\n  sliderButtons.forEach((button) => {\n    button.addEventListener('click', navigateWithButtons)\n  });\n}\n\nexport function handleDotNavigation() {\n  const dots = document.querySelectorAll('.whirli-dot');\n  dots.forEach((dot) => {\n    dot.addEventListener('click', navigateWithDots)\n  });\n}\n\nexport function setSlideLinkTabindex() {\n  // make sure link on slides that are not showing are not tabbable\n  const slides = document.querySelectorAll('.whirli-slide');\n  slides.forEach((slide) => {\n    const slideLink = slide.querySelector('a');\n    if (slideLink) slideLink.setAttribute('tabindex', '-1');\n  })\n\n  // make sure link on first slide are tabbable\n  const firstSlideLink = slides[0].querySelector('a');\n  if (firstSlideLink) firstSlideLink.setAttribute('tabindex', '0')\n}\n","import { lazyLoadImages } from './src/lazy-load';\nimport { addMarkupToPage } from './src/markup';\nimport { handleButtonNavigation, handleDotNavigation, setSlideLinkTabindex } from './src/navigation';\nimport './src/scss/styles.scss';\n\nexport function init(elementId, data) {\n  addMarkupToPage(elementId, data)\n  if (data.showButtons) handleButtonNavigation();\n  if (data.showDots) handleDotNavigation();\n  setSlideLinkTabindex();\n  lazyLoadImages();\n}"]}